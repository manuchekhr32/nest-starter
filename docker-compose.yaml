services:
  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: redis
      REDIS_HOST: redis
      PORT: ${PORT}
    ports:
      - ${PORT}:${PORT}
    networks:
      - nest-starter-net
    depends_on:
      - postgres
      - redis

  postgres:
    image: bitnami/postgresql:17
    restart: always
    environment:
      POSTGRESQL_PORT_NUMBER: ${DB_PORT}
      POSTGRESQL_USERNAME: ${DB_USER}
      POSTGRESQL_PASSWORD: ${DB_PASSWORD}
      POSTGRESQL_DATABASE: ${DB_NAME}
      POSTGRESQL_TIMEZONE: 'Asia/Tashkent'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - nest-starter-postgres-data:/bitnami/postgresql
    networks:
      - nest-starter-net

  redis:
    image: bitnami/redis:7.4
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT_NUMBER: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      REDIS_IO_THREADS: 4
      REDIS_IO_THREADS_DO_READS: yes
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - nest-starter-redis-data:/bitnami/redis/data
    networks:
      - nest-starter-net

volumes:
  nest-starter-redis-data:
    driver: local
  nest-starter-postgres-data:
    driver: local

networks:
  nest-starter-net:
    driver: bridge
